openapi: 3.1.0

info:
  title: "COMP2001 API"
  summary: "This is a simple API doc using OpenAPI v3.1.0"
  description: "My simple python/sql server API documentation"
  version: 1.0.0
  contact:
    name: "Bobby Mannino"
    email: "manninobobby@icloud.com"
    url: "https://bobman.dev"

servers:
  - url: "http://cent-5-534.uopnet.plymouth.ac.uk/COMP2001/BMannino"

tags:
  - name: "trails"
    description: "Trail (hike) operations"

paths:
  "/trails":
    get:
      tags: ["trails"]
      operationId: "listTrails"
      summary: "Return an array of trails"
      description: "Returns an array the trails. The information returned is limited."
      parameters:
        - schema:
          $ref: "#/components/parameters/limit"
      responses:
        "200":
          description: "An array of trails"
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  type: "object"
                  properties:
                    id:
                      $ref: "#/components/schemas/TrailId"
                    title:
                      $ref: "#/components/schemas/TrailTitle"
    post:
      tags: ["trails"]
      operationId: "createTrail"
      summary: "Create a new trail"
      description: "Create a new trail in the database"
      parameters:
        - schema:
          $ref: "#/components/parameters/email"
        - schema:
          $ref: "#/components/parameters/password"
      responses:
        "201":
          description: "Created trail successfully"
  "/trails/{trailId}":
    get:
      tags: ["trails"]
      operationId: "trailInfo"
      summary: "Return info about a certain trail"
      description: "Returns info about a certain trail, if you are not an admin you will get limited details about the trail."
      parameters:
        - schema:
          $ref: "#/components/parameters/trailId"
        - schema:
          $ref: "#/components/parameters/email"
        - schema:
          $ref: "#/components/parameters/password"
      responses:
        "200":
          description: "Information about a trail"
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  oneOf:
                    - type: "object"
                      properties:
                        id:
                          $ref: "#/components/schemas/TrailId"
                        title:
                          $ref: "#/components/schemas/TrailTitle"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: ["trails"]
      operationId: "updateTrail"
      summary: "Update a trails information"
      description: "Update information about a trail in the database"
      parameters:
        - schema:
          $ref: "#/components/parameters/trailId"
        - schema:
          $ref: "#/components/parameters/email"
        - schema:
          $ref: "#/components/parameters/password"
      responses:
        "200":
          description: "Trail has been updated"
    delete:
      tags: ["trails"]
      operationId: "removeTrail"
      summary: "Remove a trail from the database"
      description: "Remove a trail from the database. This will only work if you are an admin."
      parameters:
        - schema:
          $ref: "#/components/parameters/trailId"
        - schema:
          $ref: "#/components/parameters/email"
        - schema:
          $ref: "#/components/parameters/password"
      responses:
        "204":
          description: "Trail has been removed"
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  schemas:
    TrailTitle:
      type: "string"
      format: "string"
    TrailLocation:
      type: "string"
      format: "string"
    TrailCountry:
      $ref: "#/components/schemas/TrailLocation"
    TrailCounty:
      $ref: "#/components/schemas/TrailLocation"
    TrailCity:
      $ref: "#/components/schemas/TrailLocation"
    TrailId:
      type: "integer"
      format: "int32"
      examples:
        - 22
        - 12
        - 79
    TrailCreatedAt:
      type: "string"
      format: "date-time"
    TrailDescription:
      type: "string"
    TrailElevation:
      type: "integer"
      format: "int32"
    TrailLength:
      type: "integer"
      format: "int32"
    TrailRouteType:
      type: "string"
    UserEmail:
      type: "string"
    UserPassword:
      type: "string"
      format: "password"
    BadResponse:
      type: "object"
      properties:
        message:
          type: "string"
          examples:
            - "Trail not found"
  parameters:
    trailId:
      name: "trailId"
      in: "path"
      required: true
      description: "The id of the trail"
      schema:
        type: "integer"
        format: "int32"
    email:
      name: "x-email"
      in: "header"
      required: false
      description: "The email of the user"
      schema:
        $ref: "#/components/schemas/UserEmail"
    password:
      name: "x-password"
      in: "header"
      required: false
      description: "The password of the user"
      schema:
        $ref: "#/components/schemas/UserPassword"
    limit:
      name: "limit"
      in: "query"
      description: "number of items to take"
      required: false
      schema:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 96
        default: 24
      example: 22
  responses:
    Unauthorized:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadResponse"
    NotFound:
      description: "Not Found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadResponse"
